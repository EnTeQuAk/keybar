General ideas, scratches and nothing important.â€¦


Authentication Workflow:

Conditions:

Device (a client, native mobile app etc)
 -> has a public and private rsa key

Public RSA Key is the device identifier
(or do we separate identifier (maybe a uuid?) and the public-key?)

-> https connection
-> /api/device/register/ {'': '...'}
-> generates a device-verification-code in the web-ui, needs to be entered
-> /api/device/verify/ {'identifier': '...', 'verification-code': '123456789'}
-> web-ui shows public-key-fingerprint, requires verification (maybe merge steps?)
-> device authenticated!







Snippet to verify password:

# backend = default_backend()
# salt = os.urandom(16)
# # derive
kdf = PBKDF2HMAC(
    algorithm=hashes.SHA256(),
    length=32,
    salt=salt,
    iterations=100000,
    backend=backend
)

key = kdf.derive(b"my great password")
print(key)

# verify
kdf = PBKDF2HMAC(
    algorithm=hashes.SHA256(),
    length=32,
    salt=salt,
    iterations=100000,
    backend=backend
)

print(kdf.verify(b"my great password", key))


TODOS:

 * Verify Content-MD5
